{"version":3,"sources":["views/base/list-groups/ListGroups.js"],"names":["ListGroups","xs","name","href","className","active","disabled","component","flush","map","breakpoint","index","layout","color","shape","label","defaultChecked"],"mappings":"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","file":"static/js/26.3da398db.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CFormCheck,\r\n  CListGroup,\r\n  CListGroupItem,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport { DocsCallout, DocsExample } from 'src/components'\r\n\r\nconst ListGroups = () => {\r\n  return (\r\n    <CRow>\r\n      <CCol xs={12}>\r\n        <DocsCallout name=\"List Group\" href=\"components/list-group\" />\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React List Group</strong> <small>Basic example</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              The default list group is an unordered list with items and the proper CSS classes.\r\n              Build upon it with the options that follow, or with your CSS as required.\r\n            </p>\r\n            <DocsExample href=\"components/list-group\">\r\n              <CListGroup>\r\n                <CListGroupItem>Cras justo odio</CListGroupItem>\r\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\r\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\r\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\r\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\r\n              </CListGroup>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React List Group</strong> <small>Active items</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Add <code>active</code> boolean property to a <code>&lt;CListGroupItem&gt;</code> to\r\n              show the current active selection.\r\n            </p>\r\n            <DocsExample href=\"components/list-group/#active-items\">\r\n              <CListGroup>\r\n                <CListGroupItem active>Cras justo odio</CListGroupItem>\r\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\r\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\r\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\r\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\r\n              </CListGroup>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React List Group</strong> <small>Disabled items</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Add <code>disabled</code> boolean property to a <code>&lt;CListGroupItem&gt;</code> to\r\n              make it appear disabled.\r\n            </p>\r\n            <DocsExample href=\"components/list-group/#disabled-items\">\r\n              <CListGroup>\r\n                <CListGroupItem disabled>Cras justo odio</CListGroupItem>\r\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\r\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\r\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\r\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\r\n              </CListGroup>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React List Group</strong> <small>Links and buttons</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Use <code>&lt;a&gt;</code>s or <code>&lt;button&gt;</code>s to create{' '}\r\n              <em>actionable</em> list group items with hover, disabled, and active states by adding{' '}\r\n              <code>component=&#34;a|button&#34;</code>. We separate these pseudo-classes to ensure\r\n              list groups made of non-interactive elements (like <code>&lt;li&gt;</code>s or{' '}\r\n              <code>&lt;div&gt;</code>\r\n              s) don&#39;tprovide a click or tap affordance.\r\n            </p>\r\n            <DocsExample href=\"components/list-group/#links-and-buttons\">\r\n              <CListGroup>\r\n                <CListGroupItem component=\"a\" href=\"#\" active>\r\n                  Cras justo odio\r\n                </CListGroupItem>\r\n                <CListGroupItem component=\"a\" href=\"#\">\r\n                  Dapibus ac facilisis in\r\n                </CListGroupItem>\r\n                <CListGroupItem component=\"a\" href=\"#\">\r\n                  Morbi leo risus\r\n                </CListGroupItem>\r\n                <CListGroupItem component=\"a\" href=\"#\">\r\n                  Porta ac consectetur ac\r\n                </CListGroupItem>\r\n                <CListGroupItem component=\"a\" href=\"#\" disabled>\r\n                  Vestibulum at eros\r\n                </CListGroupItem>\r\n              </CListGroup>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React List Group</strong> <small>Flush</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Add <code>flush</code> boolean property to remove some borders and rounded corners to\r\n              render list group items edge-to-edge in a parent container (e.g., cards).\r\n            </p>\r\n            <DocsExample href=\"components/list-group/#flush\">\r\n              <CListGroup flush>\r\n                <CListGroupItem>Cras justo odio</CListGroupItem>\r\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\r\n                <CListGroupItem>Morbi leo risus</CListGroupItem>\r\n                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>\r\n                <CListGroupItem>Vestibulum at eros</CListGroupItem>\r\n              </CListGroup>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React List Group</strong> <small>Horizontal</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Add <code>layout=&#34;horizontal&#34;</code> to change the layout of list group items\r\n              from vertical to horizontal across all breakpoints. Alternatively, choose a responsive\r\n              variant <code>.layout=&#34;horizontal-&#123;sm | md | lg | xl | xxl&#125;&#34;</code>{' '}\r\n              to make a list group horizontal starting at that breakpoint&#39;s{' '}\r\n              <code>min-width</code>. Currently{' '}\r\n              <strong>horizontal list groups cannot be combined with flush list groups.</strong>\r\n            </p>\r\n            <DocsExample href=\"components/list-group/#flush\">\r\n              {['', '-sm', '-md', '-lg', '-xl', '-xxl'].map((breakpoint, index) => (\r\n                <CListGroup className=\"mb-2\" layout={`horizontal${breakpoint}`} key={index}>\r\n                  <CListGroupItem>Cras justo odio</CListGroupItem>\r\n                  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\r\n                  <CListGroupItem>Morbi leo risus</CListGroupItem>\r\n                </CListGroup>\r\n              ))}\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React List Group</strong> <small>Contextual classes</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Use contextual classes to style list items with a stateful background and color.\r\n            </p>\r\n            <DocsExample href=\"components/list-group/#contextual-classes\">\r\n              <CListGroup>\r\n                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>\r\n                {[\r\n                  'primary',\r\n                  'secondary',\r\n                  'success',\r\n                  'danger',\r\n                  'warning',\r\n                  'info',\r\n                  'light',\r\n                  'dark',\r\n                ].map((color, index) => (\r\n                  <CListGroupItem color={color} key={index}>\r\n                    A simple {color} list group item\r\n                  </CListGroupItem>\r\n                ))}\r\n              </CListGroup>\r\n            </DocsExample>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Contextual classes also work with <code>&lt;a&gt;</code>s or{' '}\r\n              <code>&lt;button&gt;</code>s. Note the addition of the hover styles here not present\r\n              in the previous example. Also supported is the <code>active</code> state; apply it to\r\n              indicate an active selection on a contextual list group item.\r\n            </p>\r\n            <DocsExample href=\"components/list-group/#contextual-classes\">\r\n              <CListGroup>\r\n                <CListGroupItem component=\"a\" href=\"#\">\r\n                  Dapibus ac facilisis in\r\n                </CListGroupItem>\r\n                {[\r\n                  'primary',\r\n                  'secondary',\r\n                  'success',\r\n                  'danger',\r\n                  'warning',\r\n                  'info',\r\n                  'light',\r\n                  'dark',\r\n                ].map((color, index) => (\r\n                  <CListGroupItem component=\"a\" href=\"#\" color={color} key={index}>\r\n                    A simple {color} list group item\r\n                  </CListGroupItem>\r\n                ))}\r\n              </CListGroup>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React List Group</strong> <small>With badges</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Add badges to any list group item to show unread counts, activity, and more.\r\n            </p>\r\n            <DocsExample href=\"components/list-group/#with-badges\">\r\n              <CListGroup>\r\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\r\n                  Cras justo odio\r\n                  <CBadge color=\"primary\" shape=\"rounded-pill\">\r\n                    14\r\n                  </CBadge>\r\n                </CListGroupItem>\r\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\r\n                  Dapibus ac facilisis in\r\n                  <CBadge color=\"primary\" shape=\"rounded-pill\">\r\n                    2\r\n                  </CBadge>\r\n                </CListGroupItem>\r\n                <CListGroupItem className=\"d-flex justify-content-between align-items-center\">\r\n                  Morbi leo risus\r\n                  <CBadge color=\"primary\" shape=\"rounded-pill\">\r\n                    1\r\n                  </CBadge>\r\n                </CListGroupItem>\r\n              </CListGroup>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React List Group</strong> <small>Custom content</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Add nearly any HTML within, even for linked list groups like the one below, with the\r\n              help of <a href=\"https://coreui.io/docs/utilities/flex/\">flexbox utilities</a>.\r\n            </p>\r\n            <DocsExample href=\"components/list-group/#custom-content\">\r\n              <CListGroup>\r\n                <CListGroupItem component=\"a\" href=\"#\" active>\r\n                  <div className=\"d-flex w-100 justify-content-between\">\r\n                    <h5 className=\"mb-1\">List group item heading</h5>\r\n                    <small>3 days ago</small>\r\n                  </div>\r\n                  <p className=\"mb-1\">\r\n                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus\r\n                    varius blandit.\r\n                  </p>\r\n                  <small>Donec id elit non mi porta.</small>\r\n                </CListGroupItem>\r\n                <CListGroupItem component=\"a\" href=\"#\">\r\n                  <div className=\"d-flex w-100 justify-content-between\">\r\n                    <h5 className=\"mb-1\">List group item heading</h5>\r\n                    <small className=\"text-medium-emphasis\">3 days ago</small>\r\n                  </div>\r\n                  <p className=\"mb-1\">\r\n                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus\r\n                    varius blandit.\r\n                  </p>\r\n                  <small className=\"text-medium-emphasis\">Donec id elit non mi porta.</small>\r\n                </CListGroupItem>\r\n                <CListGroupItem component=\"a\" href=\"#\">\r\n                  <div className=\"d-flex w-100 justify-content-between\">\r\n                    <h5 className=\"mb-1\">List group item heading</h5>\r\n                    <small className=\"text-medium-emphasis\">3 days ago</small>\r\n                  </div>\r\n                  <p className=\"mb-1\">\r\n                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus\r\n                    varius blandit.\r\n                  </p>\r\n                  <small className=\"text-medium-emphasis\">Donec id elit non mi porta.</small>\r\n                </CListGroupItem>\r\n              </CListGroup>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n      <CCol xs={12}>\r\n        <CCard className=\"mb-4\">\r\n          <CCardHeader>\r\n            <strong>React List Group</strong> <small>Checkboxes and radios</small>\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            <p className=\"text-medium-emphasis small\">\r\n              Place CoreUI&#39;s checkboxes and radios within list group items and customize as\r\n              needed.\r\n            </p>\r\n            <DocsExample href=\"components/list-group/#checkboxes-and-radios\">\r\n              <CListGroup>\r\n                <CListGroupItem>\r\n                  <CFormCheck label=\"Cras justo odio\" />\r\n                </CListGroupItem>\r\n                <CListGroupItem>\r\n                  <CFormCheck label=\"Dapibus ac facilisis in\" defaultChecked />\r\n                </CListGroupItem>\r\n                <CListGroupItem>\r\n                  <CFormCheck label=\"Morbi leo risus\" defaultChecked />\r\n                </CListGroupItem>\r\n                <CListGroupItem>\r\n                  <CFormCheck label=\"orta ac consectetur ac\" />\r\n                </CListGroupItem>\r\n                <CListGroupItem>\r\n                  <CFormCheck label=\"Vestibulum at eros\" />\r\n                </CListGroupItem>\r\n              </CListGroup>\r\n            </DocsExample>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default ListGroups\r\n"],"sourceRoot":""}